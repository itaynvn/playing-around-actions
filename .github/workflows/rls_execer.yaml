name: Package and release
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install zip
        run: sudo apt-get -y install zip

      - name: Package bla.txt
        run: zip bla.zip bla.txt

      - name: Bump version number
        run: |
          version=$(grep -m 1 'version' app-info.yaml | awk '{print $2}')
          major=$(echo $version | cut -d'.' -f1)
          minor=$(echo $version | cut -d'.' -f2)
          patch=$(echo $version | cut -d'.' -f3)
          new_minor=$(expr $minor + 1)
          new_version="$major.$new_minor.$patch"
          sed -i "s/version: $version/version: $new_version/g" app-info.yaml

      - name: Rename zip file with new version
        run: |
          VERSION=$(grep "version:" app-info.yaml | cut -d' ' -f2)
          mv bla.zip $VERSION.zip

      - name: Upload to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./
          github_token: ${{ secrets.ACCESS_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set output version
        id: set_version
        run: |
          pwd
          ls -la
          cat app-info.yaml
          echo "version=$(grep 'version:' app-info.yaml | cut -d' ' -f2)" >> "$GITHUB_OUTPUT"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_version.outputs.version }}
          release_name: Release ${{ steps.set_version.outputs.version }}
          draft: false
          prerelease: false
